@page "/users"
@attribute [Authorize(Roles = "Admin")]

<Row Style="margin-bottom: 0.75rem">
    <AntDesign.Col>
        <Space>
            <SpaceItem>
                <Button Icon="@(IconType.Outline.Plus)" Type="@(ButtonType.Primary)" OnClick="() => OpenSideDrawer(true)">Add User</Button>
            </SpaceItem>
            @if (selectedRows != null)
            {
                <SpaceItem>
                    <Button Icon="@(IconType.Outline.Edit)" OnClick="() => OpenSideDrawer()">Edit User</Button>
                </SpaceItem>
                <SpaceItem>
                    <Popconfirm Title="Sure to Reset Password?"
                                OnConfirm="() => ResetPassword(selectedRows.First().Id)"
                                OkText="Yes"
                                CancelText="No">
                        <Button Icon="@(IconType.Outline.Rocket)" Loading="@loading" Danger>Reset Password</Button>
                    </Popconfirm>
                </SpaceItem>
            }
        </Space>
    </AntDesign.Col>
    <AntDesign.Col Flex="2" />
    <AntDesign.Col Flex="1">
        <Row>
            <AntDesign.Col Flex="1">
                <Input Placeholder="Search" @bind-Value="@search" />
            </AntDesign.Col>
            <AntDesign.Col Style="margin-left: 0.75rem">
                <Tooltip Title="@IconType.Outline.Search">
                    <Button Type="@ButtonType.Default" Shape="@ButtonShape.Circle" Icon="@IconType.Outline.Search" OnClick="@LoadUsersAsync" />
                </Tooltip>
            </AntDesign.Col>
        </Row>
    </AntDesign.Col>
</Row>

<AddEditUserDrawer CurrentUser="@selectedRows?.First()" Visible="@drawerVisible" OnClose="@CloseSideBar" OnItemUpdate="@LoadUsersAsync" />

<Table TItem="UserResponse"
       DataSource="@users"
       Loading="loading"
       OnChange="@LoadUsersAsync"
       Total="total"
       @bind-PageIndex="pageIndex"
       @bind-PageSize="pageSize"
       @bind-SelectedRows="selectedRows">

    <Selection Key="@context.EmployeeCode" Type="radio" />
    <Column @bind-Field="@context.DisplayName" />
    <Column @bind-Field="@context.EmployeeCode" />
    <Column @bind-Field="@context.Designation" />
    <Column @bind-Field="@context.Email" />
</Table>

<p>PageIndex: @pageIndex | PageSize: @pageSize | Total: @total</p>

@code{
    List<UserResponse> users = new();
    IEnumerable<UserResponse> selectedRows;

    int pageIndex = 1;
    int pageSize = 10;
    int total = 0;
    bool loading = false;
    bool drawerVisible = false;
    string search;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsersAsync();
    }

    async Task LoadUsersAsync()
    {
        loading = true;
        selectedRows = null;
        var response = await userService.GetUsersPagination(pageIndex, pageSize, search);
        users = response.Items;
        total = response.TotalCount;
        loading = false;
    }

    async Task ResetPassword(string userId)
    {
        loading = true;
        var result = await userService.ResetPassword(userId);
        loading = false;
        StateHasChanged();

        if (result.Succeeded)
        {
            await messageService.Success(result.Message);
        }
        else
        {
            await messageService.Error(result.Message);
        }
    }

    void OpenSideDrawer(bool isAdd = false)
    {
        if (isAdd)
        {
            selectedRows = null;
        }
        drawerVisible = true;
    }

    void CloseSideBar()
    {
        drawerVisible = false;
    }
}