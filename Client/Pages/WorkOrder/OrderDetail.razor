@page "/orderdetail/{Id}"
@attribute [Authorize]

<Breadcrumb Style="margin-bottom: 0.5rem">
	<BreadcrumbItem Href="/workorder">
		<Icon Type="container" />
		<span>Work Order</span>
	</BreadcrumbItem>
	<BreadcrumbItem>
		Details
	</BreadcrumbItem>
</Breadcrumb>

@if (data != null)
{
    <CascadingValue Value="@data.Id" TValue="int">
        <CascadingValue Value="@data.Status" TValue="string">
            <Tabs Animated>
                <TabPane Tab="Work Order Header" Key="1">
                    <WorkOrderHeader WorkOrder="@data" WorkOrderPublished="@ReloadPage" />
                </TabPane>

                <TabPane Tab="Work Order Line Items" Key="2">
                    <WorkOrderItems Items="@data.Items" ReloadPage="@ReloadPage" />
                </TabPane>

                <TabPane Tab="Measurement Books" Key="3">
                    <MeasurementBooks/>
                </TabPane>
            </Tabs>
        </CascadingValue>
    </CascadingValue>
}
else
{
    <Spin>
        <Empty />
    </Spin>
}

@code {
    [Parameter]
    public string Id { get; set; }

    public WorkOrderDetailResponse data { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadWorkOrderDetailsAsync();
    }

    async Task LoadWorkOrderDetailsAsync()
    {
        var result = await workOrderService.GetWorkOrderById(int.Parse(Id));
        if (!result.Succeeded)
        {
            navManager.NavigateTo("/workorder");
            await messageService.Warning(result.Message);
            return;
        }

        data = result.Data;
    }

    async Task ReloadPage()
    {
        await LoadWorkOrderDetailsAsync();
    }
}
