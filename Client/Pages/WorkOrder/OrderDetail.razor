@page "/workorder/{Id}"
@attribute [Authorize]

@if (data != null)
{
    <CascadingValue Value="@data.Id" TValue="int">
        <Tabs Animated>
            <TabPane Tab="Work Order Header" Key="1">
                <WorkOrderHeader WorkOrder="@data" WorkOrderPublished="@OnPublish" />
            </TabPane>

            <TabPane Tab="Work Order Line Items" Key="2">
                <WorkOrderItems Items="@data.Items" ReloadPage="@ReloadPage" />
            </TabPane>

            <TabPane Tab="Measurement Books" Key="3">
                <MeasurementBooks WorkOrderStatus="@data.Status" />
            </TabPane>
        </Tabs>
    </CascadingValue>
}
else
{
    <Spin>
        <Empty />
    </Spin>
}

@code {
    [Parameter]
    public string Id { get; set; }

    public WorkOrderDetailResponse data { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadWorkOrderDetailsAsync();
    }

    async Task LoadWorkOrderDetailsAsync()
    {
        var result = await workOrderService.GetWorkOrderById(int.Parse(Id));
        if (!result.Succeeded)
        {
            navManager.NavigateTo("/workorder");
            await messageService.Warning(result.Message);
            return;
        }

        data = result.Data;
    }

    void OnPublish()
    {
        data.Status = "PUBLISHED";
    }

    async Task ReloadPage()
    {
        await LoadWorkOrderDetailsAsync();
    }
}
