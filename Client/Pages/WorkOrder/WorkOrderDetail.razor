@page "/workorder/{Id}"
@inject IWorkOrderService _workOrderService
@using EmbPortal.Shared.Responses

@if (data != null)
{
    <Tabs @bind-ActiveKey="@activeKey" OnChange="OnTabChange" Animated>
        <TabPane Tab="Work Order Header" Key="1">
            <Descriptions Bordered Size="@DescriptionsSize.Middle">
                <DescriptionsItem Title="Order No" Span="2">@data.OrderNo</DescriptionsItem>
                <DescriptionsItem Title="Order Date" Span="2"> @data.OrderDate</DescriptionsItem>
                <DescriptionsItem Title="Agreement No" Span="2"> @data.AgreementNo</DescriptionsItem>
                <DescriptionsItem Title="Agreement Date" Span="2"> @data.AgreementDate</DescriptionsItem>
                <DescriptionsItem Title="Contractor" Span="2">@data.ContractorName</DescriptionsItem>
                <DescriptionsItem Title="Status" Span="2"><Tag Color="green">@data.Status</Tag></DescriptionsItem>
                <DescriptionsItem Title="Work Description" Span="4">@data.Title</DescriptionsItem>
                <DescriptionsItem Title="Project" Span="2">@data.ProjectName</DescriptionsItem>
                <DescriptionsItem Title="Engineer In Charge" Span="2">@data.EngineerInCharge</DescriptionsItem>
            </Descriptions>
        </TabPane>
        <TabPane Tab="Work Order Line Items" Key="2">
            <WorkOrderItems />
        </TabPane>
    </Tabs>
}

@code {
    [Parameter]
    public string Id { get; set; }
    public WorkOrderDetailResponse data { get; set; }

    string activeKey { get; set; } = "1";

    void OnTabChange(string key)
    {
        Console.WriteLine($"tab change:{key}");
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadWorkOrderDetailsAsync();
    }

    async Task LoadWorkOrderDetailsAsync()
    {
        data = await _workOrderService.GetWorkOrderById(int.Parse(Id));
    }
}
