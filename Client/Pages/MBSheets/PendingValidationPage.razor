@page "/mbsheets/pending/validation"

<Breadcrumb Style="margin-bottom: 0.5rem">
    <BreadcrumbItem Href="/">
        <Icon Type="dashboard" />
        <span>Dashboard</span>
    </BreadcrumbItem>
    <BreadcrumbItem>
        Pending MB Validations
    </BreadcrumbItem>
</Breadcrumb>


<Table Loading="@loading"
       TItem="MBSheetInfoResponse"
       Size="@TableSize.Small"
       DataSource="@mbSheets">

    <Column @bind-Field="@context.Title" Width="50%" />
    <Column @bind-Field="@context.Status" Width="15%" />
    <Column @bind-Field="@context.MeasurementDate" Format="dd-MM-yyyy" Width="15%" />
    <ActionColumn Title="Action" Width="20%">
        <Button OnClick="() => GoToMBookDetailPage(context.MeasurementBookId,context.Id)"
                Icon="@IconType.Outline.Api"
                Type="@ButtonType.Primary"
                Size="@ButtonSize.Small"/>           
    </ActionColumn>
     
</Table>

@code {
    bool loading;
    List<MBSheetInfoResponse> mbSheets = new();

    async Task LoadPendingValidationMBSheetsAsync()
    {
        loading = true;
        mbSheets = await mbSheetService.GetPendingValidationMBSheets();
        loading = false;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadPendingValidationMBSheetsAsync();
    }

    void GoToMBookDetailPage(int mBookId, int mbSheetId)
    {
        navManager.NavigateTo($"/mbook/{mBookId}/mbsheet/{mbSheetId}");
    }
}
