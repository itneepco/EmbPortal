@page "/mbook/{MBookId:int}/mbsheet/{MBSheetId:int}/items"
@attribute [Authorize]

<h3>Add Measurements</h3>

<Breadcrumb Style="margin-bottom: 0.75rem">
    <BreadcrumbItem Href="/">
        <Icon Type="home" />
        <span>Dashboard</span>
    </BreadcrumbItem>

    <BreadcrumbItem Href="@($"mbook/{MBookId}/mbsheet/{MBSheetId}")">
        MB Sheet
    </BreadcrumbItem>

    <BreadcrumbItem>
        Add Measurement
    </BreadcrumbItem>
</Breadcrumb>

<Spin Spinning="loading">
    <CascadingValue Value="MBookId" Name="MBookId">
        <CascadingValue Value="MBSheetId" Name="MBSheetId">
            <MeasurementStepper Model="@model" MBItemStatus="@mbItemsStatuses"/>
        </CascadingValue>
    </CascadingValue>
</Spin>

@code {
    [Parameter]
    public int MBookId { get; set; }

    [Parameter]
    public int MBSheetId { get; set; }

    private bool loading;

    private List<WorkOrderItemStatusResponse> mbItemsStatuses = new();
    public MBSheetItemRequest model { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadCurrentMBookItemsStatusAsync();
    }

    async Task LoadCurrentMBookItemsStatusAsync()
    {
        loading = true;
        mbItemsStatuses = await mBookService.GetCurrentMBItemsStatus(MBookId);
        loading = false;
    }
}