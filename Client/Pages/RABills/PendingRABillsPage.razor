@page "/rabills/pending"

<Breadcrumb Style="margin-bottom: 0.5rem">
    <BreadcrumbItem Href="/">
        <Icon Type="dashboard" />
        <span>Dashboard</span>
    </BreadcrumbItem>
    <BreadcrumbItem>
        Pending RA Bills
    </BreadcrumbItem>
</Breadcrumb>

<h3>Pending RA Bills</h3>

<Table Loading="@loading"
       TItem="RABillInfoResponse"
       Size="@TableSize.Small"
       DataSource="@raBills">

    <Column @bind-Field="@context.OrderNo" Width="15%" />
    <Column @bind-Field="@context.OrderDate" Format="dd-MM-yyyy" Width="10%" />
    <Column @bind-Field="@context.Contractor" Width="19%" />
    <Column @bind-Field="@context.MBookTitle" Width="19%" />
    <Column @bind-Field="@context.RABillTitle" Width="19%" />
    <ActionColumn Title="Action" Width="8%">
        <Button OnClick="() => GoToMBookDetailPage(context.MeasurementBookId)" 
                Type="@ButtonType.Primary"
                Size="@ButtonSize.Small">View</Button>
    </ActionColumn>

</Table>

@code {
    bool loading;
    List<RABillInfoResponse> raBills = new();

    async Task LoadPendingRABillsAsync()
    {
        loading = true;
        raBills = await raBillService.GetUserPendingRABills();
        loading = false;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadPendingRABillsAsync();
    }

    void GoToMBookDetailPage(int mBookId)
    {
        navManager.NavigateTo($"/mbooks/{mBookId}/3");
    }
}
