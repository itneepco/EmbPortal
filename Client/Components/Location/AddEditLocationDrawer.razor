<Drawer Closable="true"
        Width="550"
        Title="@(CurrentProject == null ?  "Add Location" : "Edit Location")"
        Visible="@Visible"
        OnClose="@Close">

    <Form Model="@model" OnFinish="@OnSubmit" Layout="@FormLayout.Vertical" Loading="@loading">
        <FormItem Label="Name">
            <Input @bind-Value="@context.Name" TValue="string" />
        </FormItem>

        <Row Style="margin-top: 2rem">
            <AntDesign.Col Flex="1"></AntDesign.Col>
            <AntDesign.Col>
                <Button Type="@ButtonType.Default" OnClick="Close">Cancel</Button>
                <Button HtmlType="submit" Type="@ButtonType.Primary">Save</Button>
            </AntDesign.Col>
        </Row>
    </Form>
</Drawer>

@code{
    [Parameter]
    public ProjectResponse CurrentProject { get; set; }

    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter]
    public EventCallback<bool> OnItemUpdate { get; set; }


    ProjectRequest model = new();
    bool loading = false;

    protected override void OnParametersSet()
    {
        if (CurrentProject != null)
        {
            // for editing existing line item
            model.Name = CurrentProject.Name;
        }
        else
        {
            model = new();
        }
    }

    async Task OnSubmit()
    {
        loading = true;
        dynamic result;
        if (CurrentProject == null)
        {
            result = await projectservice.CreateProject(model);
        }
        else
        {
            result = await projectservice.UpdateProject(CurrentProject.Id, model);
        }
        loading = false;

        if (result.Succeeded)
        {
            Close();
            await OnItemUpdate.InvokeAsync();
            await messageService.Success(result.Message);
        }
        else
        {
            await messageService.Error(result.Message);
        }
    }

    void Close()
    {
        OnClose.InvokeAsync();
    }
}