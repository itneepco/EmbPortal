<Drawer Closable="true" Width="700"
        Title="@(WorkOrder == null ?  "Add Work order" : "Edit Work Order")" 
        Visible="@Visible" OnClose="@Close">
    <Form Style="height:90%" Layout="@FormLayout.Vertical" Loading="loading" Model="@model" OnFinish="@OnSubmit">
        <Row Gutter="16">
            <AntDesign.Col Span="12">
                <FormItem Label="Engineer In Charge">
                    <Input Placeholder="Engineer In Charge" TValue="string" @bind-Value="@context.EngineerInCharge" />
                </FormItem>
            </AntDesign.Col>
        </Row>
        <Row Gutter="16">
            <AntDesign.Col Span="24">
                <FormItem Label="Work Description">
                    <TextArea Placeholder="Please enter work description" Rows="4" @bind-Value="@context.Title" />
                </FormItem>
            </AntDesign.Col>
        </Row>
        <Row Gutter="16">
            <AntDesign.Col Span="16">
                <FormItem Label="Work Order No">
                    <Input Placeholder="Work Order No" TValue="string" @bind-Value="@context.OrderNo" />
                </FormItem>
            </AntDesign.Col>
            <AntDesign.Col Span="8">
                <FormItem Label="Work Order Date">
                    <DatePicker TValue="DateTime?" Picker="@DatePickerType.Date" @bind-Value="@context.OrderDate" Format="dd-MM-yyyy" Style="width: 100%" />
                </FormItem>
            </AntDesign.Col>
        </Row>

        <FormItem WrapperColOffset="18" WrapperColSpan="6">
            <Button Type="@ButtonType.Default" OnClick="@Close">Cancel</Button>
            <Button HtmlType="submit" Type="@ButtonType.Primary">Save</Button>
        </FormItem>
    </Form>
</Drawer>


@code{
    [Parameter]
    public WorkOrderResponse WorkOrder { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter]
    public bool Visible { get; set; }

    WorkOrderRequest model { get; set; } = new();
    bool loading;

    protected override void OnParametersSet()
    {
        if (WorkOrder != null)
        {
            model.OrderNo = WorkOrder.OrderNo;
            model.OrderDate = WorkOrder.OrderDate;
            model.Title = WorkOrder.Title;
            model.Project = WorkOrder.Project;
            model.Contractor = WorkOrder.Contractor;
            model.EngineerInCharge = WorkOrder.EngineerInCharge;
        }
        else
        {
            model = new();
        }
    }

    void Close()
    {
        OnClose.InvokeAsync();
    }

    async Task OnSubmit(EditContext context)
    {
        loading = true;
        dynamic result;
        if (WorkOrder != null)
        {
            result = await workOrderService.UpdateWorkOrder(WorkOrder.Id , model);
        }
        else
        {
            result = await workOrderService.CreateWorkOrder(model);
        }
        loading = false;

        if (!result.Succeeded)
        {
            await messageService.Error(result.Message);
            return;
        }

        Close();
        var orderId = WorkOrder != null ? WorkOrder.Id : result.Data;
        navManager.NavigateTo($"/orderdetail/{orderId}");
        await messageService.Success(result.Message);
    }
}