@inject IWorkOrderService workOrderService

<Table DataSource="@items" @bind-SelectedRows="selectedRows" Size="TableSize.Small" HidePagination>
    <Selection Key="@context.ItemId.ToString()" />
    <Column Title="Line Item Description" @bind-Field="@context.Description"></Column>
</Table>

@code {
    [CascadingParameter]
    public int WorkOrderId { get; set; }

    [Parameter]
    public List<MBookItemRequest> MBookItems { get; set; }

    List<PendingOrderItemResponse> items = new();

    IEnumerable<PendingOrderItemResponse> selectedRows;

    protected override async Task OnInitializedAsync()
    {
        await LoadPendingOrderItemsAsync();
    }

    async Task LoadPendingOrderItemsAsync()
    {
        var result = await workOrderService.GetPendingWorkOrderItems(WorkOrderId);

        if (result.Succeeded)
        {
            items = result.Data.Where(p => p.IsPending).ToList();
        }
    }
}