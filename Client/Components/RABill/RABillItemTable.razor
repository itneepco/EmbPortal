<Table TItem="RABillItemRequest"
       DataSource="@ModelItems"
       Size="@TableSize.Small"
       RowClassName="@(x => x.Data.CurrentRAQty > x.Data.AvailableQty ? "danger" : null)"
       PageSize="@ModelItems.Count"
       ScrollX="800"
       Responsive="false"
       Bordered HidePagination>

    <Column Title="Description" @bind-Field="@context.WorkOrderItemDescription" ></Column>
    <Column Title="PO Qty" TData="float" > @context.PoQuantity.ToString("0.00")</Column>
    <Column Title="Rate" TData="decimal">@context.UnitRate</Column>
    <Column Title="Approved Measured Qty" TData="float" >
        @context.AcceptedMeasuredQty.ToString("0.00")
    </Column>
    <Column Title="Till Last RA Qty" TData="float" >
        @context.TillLastRAQty.ToString("0.00")
    </Column>
    <Column Title="Available Qty" TData="float" >
        @context.AvailableQty.ToString("0.00")
    </Column>
    <Column Title="Current Qty" TData="float" >
        <Input Type="text" @bind-Value="context.CurrentRAQty" />
    </Column>
    <Column Title="Current Amt (Rs)" TData="decimal" >
        @context.CurrentRAAmount.ToString("0.00")
    </Column>
    <Column Title="Remarks" TData="float" Width="16%" >
        <Input Type="text" @bind-Value="context.Remarks" />
    </Column>

    <SummaryRow>
        <SummaryCell ColSpan="4" Style="text-align:right">
            <Text Style="font-weight: bold">Total</Text>
         </SummaryCell>
        <SummaryCell ColSpan="2" Style="text-align:right">
            <Text Mark>Rs. @GetTotalAvailableAmount().ToString("0.00")</Text>
        </SummaryCell>
        <SummaryCell ColSpan="2" Style="text-align:right">
            <Text Mark>Rs. @GetTotalCurrentRAAmount().ToString("0.00")</Text>
        </SummaryCell>
        <SummaryCell />
    </SummaryRow>
</Table>

<style>
    .danger {
        background-color: #fff1f0;
    }
</style>

@code {
    [Parameter]
    public List<RABillItemRequest> ModelItems { get; set; }

    decimal GetTotalAvailableAmount()
    {
        return ModelItems.Aggregate((decimal)0, (curr, item) => curr + item.AvailableAmount);
    }

    decimal GetTotalCurrentRAAmount()
    {
        return ModelItems.Aggregate((decimal)0, (curr, item) => curr + item.CurrentRAAmount);
    }
}
