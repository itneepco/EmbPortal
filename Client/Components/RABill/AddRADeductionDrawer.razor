<Drawer Closable="true"
        Width="500"
        Title="@("Add RA Deduction")"
        Visible="@Visible"
        OnClose="@Close">

    <Form Model="@model" OnFinish="@OnSubmit" Layout="@FormLayout.Vertical" Loading="@loading">
        <FormItem Label="Description">
            <TextArea @bind-Value="@context.Description" TValue="string" />
        </FormItem>

        <FormItem Label="Amount">
            <Input @bind-Value="@context.Amount" TValue="decimal" />
        </FormItem>

        <Row Style="margin-top: 2rem">
            <AntDesign.Col Flex="1"></AntDesign.Col>
            <AntDesign.Col>
                <Button Type="@ButtonType.Default" OnClick="Close">Cancel</Button>
                <Button HtmlType="submit" Type="@ButtonType.Primary">Save</Button>
            </AntDesign.Col>
        </Row>
    </Form>
</Drawer>

@code{
    [Parameter]
    public int RABillId { get; set; }

    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter]
    public EventCallback<bool> OnItemUpdate { get; set; }

    RADeductionRequest model = new();
    bool loading = false;

    async Task OnSubmit()
    {
        loading = true;
        var result = await raBillService.CreateRADeduction(RABillId, model);

        loading = false;

        if (result.Succeeded)
        {
            Close();
            await OnItemUpdate.InvokeAsync();
            await messageService.Success(result.Message);
        }
        else
        {
            await messageService.Error(result.Message);
        }
    }

    void Close()
    {
        OnClose.InvokeAsync();
    }
}